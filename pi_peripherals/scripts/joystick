#!/usr/bin/env python

import pygame as pg
import time
import rospy
from sensor_msgs.msg import Joy

axis = [0,0,0,0]
button = [0,0,0,0,0,0,0,0,0,0,0,0]
#initiate pygame
pg.init()

#initiate the joystick(s)
pg.joystick.init()

#create a joystick
joystick = pg.joystick.Joystick(0)
joystick.init()
msg = Joy()

#joystick axis stuff
axes = joystick.get_numaxes()
buttons = joystick.get_numbuttons()
#print(str(axes))

#Initiate ROS Node
rospy.init_node('Joystick')

rate = rospy.Rate(20.0) #sets ROS refresh rate to 20Hz


joy_pub = rospy.Publisher('Joystick', Joy, queue_size=1)

if __name__ == "__main__":
    #while True: #for debugging purposes
    while not rospy.is_shutdown(): #for live program
        pg.event.pump()
        for i in range(axes):
            axis[i] = joystick.get_axis(i)
            #For Debugging
            #print("axis 0 ", str(axis[0]), " axis 1 ",str(axis[1]), " axis 2: " ,str(axis[2]), " axis 3: " ,str(axis[3]))

            #For ROS
        tuple_axis = tuple(axis)
        msg.axes = tuple_axis
        for i in range(buttons):
           button[i] = joystick.get_button(i)
        tuple_buttons = tuple(button)
        msg.buttons = tuple_buttons
           
        joy_pub.publish(msg)
        rate.sleep()
#           print(str(axis[5]))
        #for live

#Left Stick
#Axis 0 = Left -1 to Right +1
#Axis 1 = Top -1 to Bottom +1
#
#Right Stick
#Axis 2 = Left -1 to Right +1
#Axis 3 = Top -1 to Bottom +1

#class JoyStick:
#    define for i in range (joystick_count)
#!/usr/bin/env python#!/usr/bin/env python